import org.scalacheck.Properties
import org.scalacheck.Prop.forAll
import org.scalacheck.Prop.propBoolean

object ScoggleSolverSpec extends Properties("ScoggleSolver"):
  property("Sample board has all words found") = forAll: (a: Int) =>
    val board = ScoggleBoard
      .fromArray(
        Array(
          Array("N", "O", "A", "H"),
          Array("L", "C", "H", "E"),
          Array("S", "A", "T", "Y"),
          Array("Y", "R", "I", "F")
        )
      )
      .right
      .get
    val solver = ScoggleSolver(board)
    val solution = solver.solve()
    val expectedWordSet = Set(
      "CHARITY",
      "CLARIFY",
      "CLARITY",
      "SCARIFY",
      "SCHOLAR",
      "TRACHEA",
      "CHAIRS",
      "FIASCO",
      "ITASCA",
      "ITHACA",
      "LOCATE",
      "RATIFY",
      "SACHET",
      "SYRIAC",
      "TRIALS",
      "ALCOA",
      "ALOHA",
      "CATHY",
      "CHAIR",
      "CHARS",
      "CHART",
      "CHARY",
      "CLAIR",
      "COLAS",
      "FIRTH",
      "FITCH",
      "HAIRS",
      "HAIRY",
      "HALON",
      "HARTE",
      "IRATE",
      "ITCHY",
      "LAIRS",
      "LAITY",
      "LATCH",
      "LATHE",
      "OCTAL",
      "SAITH",
      "SALON",
      "SCARY",
      "SLATE",
      "SYRIA",
      "TALON",
      "TEACH",
      "TRAYS",
      "TRIAL",
      "YACHT",
      "ACHE",
      "ACHY",
      "ACTH",
      "AIRS",
      "AIRY",
      "ARTY",
      "CARS",
      "CART",
      "CARY",
      "CHAR",
      "CHAT",
      "CLAY",
      "COLA",
      "COLS",
      "EACH",
      "ETCH",
      "FIAT",
      "FIRS",
      "HAIR",
      "HALO",
      "HALS",
      "HART",
      "HATE",
      "HAYS",
      "IRAS",
      "ITCH",
      "LAIR",
      "LARS",
      "LATE",
      "LATH",
      "LAYS",
      "NOAH",
      "NOLA",
      "RATE",
      "RAYS",
      "RIFT",
      "RITA",
      "RITE",
      "SARI",
      "SATE",
      "SCAR",
      "SCAT",
      "SLAT",
      "SLAY",
      "TACO",
      "TALC",
      "TARS",
      "THAI",
      "THAR",
      "THEA",
      "THEY",
      "TRAY",
      "YEAH",
      "YETI",
      "ACT",
      "AHA",
      "AIR",
      "AOL",
      "ART",
      "ASL",
      "ATE",
      "CAL",
      "CAR",
      "CAT",
      "CHE",
      "COL",
      "CON",
      "ETA",
      "ETC",
      "FIR",
      "FIT",
      "FTC",
      "FYI",
      "HAH",
      "HAL",
      "HAS",
      "HAT",
      "HAY",
      "HEY",
      "HOC",
      "HON",
      "IRA",
      "IRS",
      "LAS",
      "LAT",
      "LAY",
      "LON",
      "NCO",
      "NOH",
      "OCT",
      "OLA",
      "RAT",
      "RAY",
      "RTE",
      "SAC",
      "SAL",
      "SAT",
      "SAY",
      "TAR",
      "TEA",
      "THE",
      "THO",
      "THY",
      "TIA",
      "TRY",
      "YEA",
      "YET",
      "YRS"
    )
    solution.equals(expectedWordSet)

  property("All found words are actual words longer than two characters") = forAll: (a: Int) =>
    val board = ScoggleBoard.getRandom()
    val solver = ScoggleSolver(board)
    val solution = solver.solve()
    solution.forall(word => WordDictionary.isWord(word) && word.length() >= 3)
